# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
#
trigger:
  - master

pool:
  vmImage: ubuntu-latest
  variables:
    CC: gcc-11
    CXX: g++-11
    CXXFLAGS: -lstdc++fs

steps:
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        # Write your commands here
        
        sudo apt-get remove -f gcc g++
        sudo apt-get install build-essential manpages-dev software-properties-common
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get update 
        echo 'install -> gcc-11 && g++-11'
        sudo apt-get install gcc-11 g++-11

        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 110 --slave /usr/bin/g++ g++ /usr/bin/g++-11 --slave /usr/bin/gcov gcov /usr/bin/gcov-11 --slave /usr/bin/gcc-ar gcc-ar /usr/bin/gcc-ar-11 --slave /usr/bin/gcc-ranlib gcc-ranlib /usr/bin/gcc-ranlib-11  --slave /usr/bin/cpp cpp /usr/bin/cpp-11;
        sudo update-alternatives --set g++ /usr/bin/g++-11
        sudo update-alternatives --set gcc /usr/bin/gcc-11
        sudo update-alternatives --set cpp-bin /usr/bin/cpp-11

        gcc --version
        g++ --version
        gcov --version

        ls -all

  - task: run-cmake@0
    inputs:
      cmakeListsOrSettingsJson: 'CMakeListsTxtBasic'
      cmakeListsTxtPath: './CMakeLists.txt'
      cmakeBuildType: 'Debug -DCMAKE_C_COMPILER=/usr/bin/gcc-11 -DCMAKE_CXX_COMPILER=/usr/bin/g++-11'
      cmakeGenerator: 'Ninja'
      buildDirectory: './build'